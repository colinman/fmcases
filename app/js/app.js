// Generated by IcedCoffeeScript 1.8.0-a
var app,
  __slice = [].slice;

window.iced = {
  Deferrals: (function() {
    function _Class(_arg) {
      this.continuation = _arg;
      this.count = 1;
      this.ret = null;
    }

    _Class.prototype._fulfill = function() {
      if (!--this.count) {
        return this.continuation(this.ret);
      }
    };

    _Class.prototype.defer = function(defer_params) {
      ++this.count;
      return (function(_this) {
        return function() {
          var inner_params, _ref;
          inner_params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          if (defer_params != null) {
            if ((_ref = defer_params.assign_fn) != null) {
              _ref.apply(null, inner_params);
            }
          }
          return _this._fulfill();
        };
      })(this);
    };

    return _Class;

  })(),
  findDeferral: function() {
    return null;
  },
  trampoline: function(_fn) {
    return _fn();
  }
};
window.__iced_k = window.__iced_k_noop = function() {};

app = angular.module('fmCases', ['onsen', 'services', 'ngHammer']);

app.controller('RootCtrl', [
  '$scope', '$localStorage', '_', 'pageTypes', 'recents', 'data', 'utilFunctions', '$http', '$sce', 'favorites', function($scope, $localStorage, _, pageTypes, recents, data, utilFunctions, $http, $sce, favorites) {
    $scope.itemTapped = function(item) {
      if (item.pageType === 'expand') {
        return item.showExpandable = !item.showExpandable;
      } else {
        return $scope.pushPage(item);
      }
    };
    $scope.itemPressed = function(item) {
      if (favorites.exists(item)) {
        favorites.remove(item);
        return $scope.showNotice("Favorites Removed", "" + item.title + " removed from favorites.");
      } else {
        favorites.add(item);
        return $scope.showNotice("Favorites Added", "" + item.title + " added as favorite.");
      }
    };
    $scope.pushPage = function(item) {
      var ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/opt/fmcases/app/js/app.coffee",
            funcname: "pushPage"
          });
          item.loadData(__iced_deferrals.defer({
            lineno: 21
          }), $http, $sce);
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          navi.pushPage(pageTypes[item.pageType], item);
          return recents.add(item);
        };
      })(this));
    };
    utilFunctions.addMenuFuncs($scope);
    $scope.pushRoot = function() {
      return $scope.pushPage(data.rootDataItem());
    };
    $scope.pageOpt = function() {
      return navi.getCurrentPage().options;
    };
    $scope.recents = function() {
      return recents.getRecents();
    };
    return $scope.favorites = function() {
      return favorites.getFavorites();
    };
  }
]);
